{"version":3,"sources":["components/LogIn/log_in.module.css","components/register/register.module.css","components/navbar/navbar.module.css","components/password-recovery/password_recovery.module.css","components/Profile/Profile.module.css","components/new_password/new_password.module.css","components/404/404.module.css","components/navbar/Navbar.tsx","components/Profile/Profile.tsx","API/API.ts","store/log_in-reducer.tsx","components/LogIn/loginForm.tsx","components/LogIn/log_in.tsx","store/register-reducer.tsx","components/register/registerForm.tsx","components/register/register.tsx","components/new_password/new_password.tsx","components/404/404.tsx","common/helpers/validations_rules.ts","components/password-recovery/password_recovery.tsx","common/customHooks/useForm.ts","App.tsx","reportWebVitals.ts","store/store.ts","store/user-reducer.ts","index.tsx"],"names":["module","exports","routes","Navbar","className","classes","to","Profile","instance","axios","create","baseURL","withCredentials","Api","email","password","post","from","message","LogInAC","verified","type","LogInFrom","props","style","width","height","id","aria-describedby","placeholder","value","onChange","setLogin","currentTarget","setPassword","textDecoration","onClick","logInSet","LogIn","dispatch","useDispatch","loginDate","useSelector","state","logIn","console","log","useState","login","Login","H1","then","res","data","catch","error","LogInThunk","initialState","isRegistered","RegisterForm","Register","e","setEmail","Password","confirmPassword","setConfirmPassword","Button","signUp","isRegisteredUser","register","alert","RegisterTC","NewPassword","Four","emailValidate","values","errors","test","PasswordRecovery","responseMessage","setResponseMessage","isDisable","setIsDisable","callback","validate","setValues","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","event","persist","target","name","handleSubmit","preventDefault","useForm","a","response","info","styles","password_recovery","onSubmit","noValidate","disabled","autoComplete","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","user","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfb6b058.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"log_in_Login__2qeof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Register\":\"register_Register__1oR1d\",\"Button\":\"register_Button__v6Meb\",\"Password\":\"register_Password__1AZeU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"navbar_Navbar__1DAnW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"password_recovery\":\"password_recovery_password_recovery__3IonX\",\"responseMessage\":\"password_recovery_responseMessage__11kxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__8Ign9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewPassword\":\"new_password_NewPassword__2Ufm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Four\":\"404_Four__tsxYV\"};","import React from \"react\";\nimport {NavLink,Redirect} from \"react-router-dom\";\nimport './navbar.module.css'\nimport classes from \"./navbar.module.css\"\n\n\nexport const routes = {\n    forProfile:\"/Profile\",\n    forLogin:\"/Log_in\",\n    forRegister:\"/Register\",\n    foNewPassword:\"/New_Password\",\n    forPasswordRecovery:\"/PasswordRecovery\",\n    forMistake:\"/404\"\n}\n\n\nconst Navbar = () => {\n    return <div className={classes.Navbar}>\n        <ul className=\"nav nav-tabs\">\n            <li className=\"nav-item\">\n                <NavLink to={routes.forProfile} className=\"nav-link\">Profile</NavLink>\n            </li>\n            <li className=\"nav-item\">\n                <NavLink to={routes.forLogin} className=\"nav-link\" >Log_in</NavLink>\n            </li>\n            <li className=\"nav-item\">\n                <NavLink to={routes.forRegister} className=\"nav-link\" >Register</NavLink>\n            </li>\n            <li className=\"nav-item\">\n                <NavLink to={routes.foNewPassword} className=\"nav-link\">New_Password</NavLink>\n            </li>\n            <li className=\"nav-item\">\n                <NavLink to={routes.forPasswordRecovery} className=\"nav-link\">Password recovery</NavLink>\n            </li>\n            <li className=\"nav-item\">\n                <NavLink to={routes.forMistake} className=\"nav-link\">404</NavLink>\n            </li>\n        </ul>\n    </div>\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./Profile.module.css\"\n\nconst Profile = () => {\n    return <div className=\"Profile\">\n        <h1>Profile</h1>\n    </div>\n}\n\nexport default Profile;","import axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL:\"https://neko-back.herokuapp.com/2.0/\",\n    withCredentials:true\n})\n\n\ntype pingType = {\n    backTime:number\n    frontTime:string\n    info:string\n    ping:number\n}\ntype LogInType = {\n    _id:string\n    email:string\n    name:string\n    avatar?:string\n    publicCardPacksCount:number\n    created:Date\n    update:Date\n    isAdmin:boolean\n    verified:boolean\n    rememberMe:boolean\n    error?:string\n}\ntype RegisterType = {\n    addedUser: {\n        created: Date\n        email: string\n        isAdmin: boolean\n        name: string\n        publicCardPacksCount: number\n        updated: Date\n        verified: boolean\n        __v: number\n        _id: string\n    }\n    error?:string\n}\n\nexport type RecoveryResponseType = {\n    info?: string\n    error?: string\n}\n\nexport const Api = {\n    getPing:() => {\n        const promise = instance.get<pingType>(\"ping\")\n        return promise\n    },\n    logIn:(email:string,password:string) => {\n        const promise = instance.post<LogInType>(\"auth/login\",{email,password})\n        return promise\n    },\n    register:(email:string,password:string) => {\n        const promise = instance.post<RegisterType>(\"auth/register\",{email,password})\n        return promise\n    },\n    recoveryPassword: (email: string | undefined) => {\n        const from = `test-front-admin <dmytrostorozhenko1994@gmail.com>`\n        const message =\n            `<div>password recover link: <a href='http://localhost:3000/#/set-new-password/$token$'>link</a></div>`\n        return instance.post<RecoveryResponseType>(\"auth/forgot\", {email, from, message})\n    }\n}","import {Dispatch} from 'redux'\nimport {Api} from \"../API/API\";\n\ntype verifiedType = \"true\" | \"false\" | \"none\"\n\ntype actionLogINType = {\n    type:\"LOGIN\"\n    email:string\n    password:string\n    verified:verifiedType\n}\ntype resetVerifiedType = {\n    type:\"RESET\"\n}\nexport type stateType = {\n    email:string,\n    password:string,\n    verified:verifiedType\n}\n\ntype actionLoginType = actionLogINType | resetVerifiedType\n\nexport const logInReducer = (state:stateType = {email:\"\",password:\"\",verified:\"none\"},action:actionLoginType) => {\n    switch (action.type){\n        case \"LOGIN\":\n            return {email:action.email,password:action.password,verified:action.verified}\n        case \"RESET\":\n            return {...state,verified:\"none\"}\n        default:\n            return state\n    }\n}\n\nexport const LogInAC = (email:string,password:string,verified:verifiedType) => {\n    return {\n        type:\"LOGIN\",\n        email,\n        password,\n        verified\n    }\n}\nexport const ResetAC = () => {\n    return {\n        type:\"RESET\"\n    }\n}\n\n\nexport const LogInThunk = (email:string,password:string) => {\n    return (dispatch:Dispatch) => {\n        Api.logIn(email,password)\n            .then((res) => {\n                debugger\n                console.log(res.data)\n                dispatch(LogInAC(email,password,\"true\"))\n            }).catch((error) => {\n                dispatch(LogInAC(email,password,\"false\"))\n        })\n    }\n\n}","import React, {useState} from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\ntype propsType = {\n    email:string\n    password:string\n    setLogin:(value:string) => void\n    setPassword:(value:string) => void\n    logInSet:() => void\n}\n\nconst LogInFrom = (props:propsType) => {\n\n\n    return (\n        <div style={{width:\"100%\",height:'200px'}}>\n                <div className=\"mb-3\">\n                    <input\n                        type=\"email\"\n                        className=\"form-control\"\n                        id=\"exampleInputEmail1\"\n                        aria-describedby=\"emailHelp\"\n                        placeholder={\"Email\"}\n                        value={props.email}\n                        onChange={(value) =>\n                        {props.setLogin(value.currentTarget.value)}}\n                    />\n                </div>\n                <div className=\"mb-3\">\n                    <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        id=\"exampleInputPassword1\"\n                        placeholder={\"Password\"}\n                        value={props.password}\n                        onChange={(value) =>\n                        {props.setPassword(value.currentTarget.value)}}\n                    />\n                </div>\n                <div className=\"mb-3 form-check\">\n                    <NavLink to={\"/PasswordRecovery\"} style={{textDecoration:'none'}}>forgot password</NavLink>\n                </div>\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                    onClick={() => {props.logInSet()}}\n                >Submit</button>\n        </div>\n    )\n}\n\nexport default LogInFrom;","import React, {useEffect, useState} from \"react\";\nimport './log_in.module.css'\nimport classes from './log_in.module.css'\nimport {LogInAC, LogInThunk} from \"../../store/log_in-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport LogInFrom from \"./loginForm\";\nimport {Redirect} from 'react-router-dom'\nimport {AppRootStateType, store} from \"../../store/store\";\nimport {routes} from \"../navbar/Navbar\";\nimport {stateType} from \"../../store/log_in-reducer\";\n\nconst LogIn = () => {\n\n    const dispatch = useDispatch()\n    const loginDate = useSelector<AppRootStateType,stateType>(state => state.logIn)\n    console.log(loginDate.email)\n    console.log(loginDate.verified)\n\n\n\n    let [login,setLogin] = useState('')\n    let [password,setPassword] = useState('')\n\n\n    const logInSet = () => {\n        dispatch(LogInThunk(login,password))\n        setLogin(\"\")\n        setPassword(\"\")\n    }\n    const setLoginWithUseState = (value:string) => {\n        setLogin(value)\n    }\n    const setPasswordWithUseState = (value:string) => {\n        setPassword(value)\n    }\n\n\n    if(loginDate.verified === \"true\"){\n        return <Redirect to={routes.forProfile}/>\n    }\n    if(loginDate.verified === \"false\"){\n        return  <Redirect to={routes.forRegister}/>\n    }\n\n\n    return <div className={classes.Login}>\n        <h1 className={classes.H1} >Login</h1>\n        <LogInFrom\n            email={ login }\n            password={ password }\n            setLogin={ setLoginWithUseState }\n            setPassword={ setPasswordWithUseState }\n            logInSet={ logInSet }\n        />\n    </div>\n}\n\nexport default LogIn;","import {Dispatch} from 'redux'\nimport {Api} from \"../API/API\";\n\ntype actionType = ReturnType<typeof RegisterAC>\ntype initialStateType = typeof initialState\n\nconst initialState = {\n    isRegistered: false\n}\n\n\nexport const registerReducer = (state: initialStateType = initialState,action:actionType) => {\n    switch (action.type){\n        case \"REGISTER\":\n            return   {...state,\n                isRegistered: action.isRegistered\n            }\n        default:\n            return state\n    }\n}\nexport const RegisterAC = (isRegistered: boolean) => ({\n    type:\"REGISTER\",\n    isRegistered\n} as const)\n\n\nexport const RegisterTC = (email:string,password:string) => (dispatch:Dispatch) => {\n    Api.register(email,password)\n        .then((res) => {\n            dispatch(RegisterAC(true))\n        })\n        .catch((error) => {\n            alert(error)\n        })\n}","import React, {ChangeEvent} from \"react\";\nimport style from './register.module.css'\n\ntype registerFormType = {\n    email: string\n    password: string\n    confirmPassword: string\n    setEmail: (value: string) => void\n    setPassword: (value: string) => void\n    setConfirmPassword: (value: string) => void\n    signUp: () => void\n}\n\nconst RegisterForm = (props: registerFormType) => {\n\n    const onChangeLoginHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        props.setEmail(e.currentTarget.value)\n    }\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        props.setPassword(e.currentTarget.value)\n    }\n    const onChangeConfirmPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        props.setConfirmPassword(e.currentTarget.value)\n    }\n\n\n    return (\n\n\n        <div className={style.Register}>\n            <div >\n                <input type=\"email\"\n                       className=\"form-control\"\n                       id=\"floatingInput\"\n                       placeholder=\"Login\"\n                       value={props.email}\n                       onChange={onChangeLoginHandler}/>\n            </div>\n            <div className={style.Password}>\n                <input type=\"password\"\n                       className=\"form-control\"\n                       id=\"floatingPassword\"\n                       placeholder=\"Password\"\n                       value={props.password}\n                       onChange={onChangePasswordHandler}/>\n            </div>\n            <div>\n                <input type=\"password\"\n                       className=\"form-control\"\n                       id=\"floatingPassword\"\n                       placeholder=\"Confirm password\"\n                       value={props.confirmPassword}\n                       onChange={onChangeConfirmPasswordHandler}/>\n            </div>\n            <div className={style.Button}>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={() => props.signUp()}>Sign up</button>\n            </div>\n        </div>\n\n\n    )\n\n\n}\n\nexport default RegisterForm","import React, {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {RegisterTC} from \"../../store/register-reducer\";\nimport RegisterForm from \"./registerForm\";\nimport {AppRootStateType} from \"../../store/store\";\n\nconst Register = () => {\n    const dispatch = useDispatch()\n    const isRegisteredUser = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\n\n    let [email, setEmail] = useState('')\n    let [password, setPassword] = useState('')\n    let [confirmPassword, setConfirmPassword] = useState('')\n\n\n    const signUp = () => {\n\n        if (password === confirmPassword) {\n            dispatch(RegisterTC(email, password))\n        } else {\n            return\n        }\n        if(!isRegisteredUser) {\n            return < Redirect to={\"/Log_in\"}/>\n        }\n\n    }\n\n    const setEmailChange = (value: string) => {\n        setEmail(value)\n    }\n    const setPasswordChange = (value: string) => {\n        setPassword(value)\n    }\n    const setConfirmPasswordChange = (value: string) => {\n        setConfirmPassword(value)\n    }\n\n\n    return <div className=\"Register\">\n        <h1>Register</h1>\n        <RegisterForm\n            email={email}\n            password={password}\n            confirmPassword={confirmPassword}\n            setConfirmPassword={setConfirmPasswordChange}\n            setEmail={setEmailChange}\n            setPassword={setPasswordChange}\n            signUp={signUp}\n        />\n\n    </div>\n\n\n}\n\nexport default Register;\n","import React from \"react\";\nimport \"./new_password.module.css\"\n\nconst NewPassword = () => {\n    return <div className=\"NewPassword\">\n\n    </div>\n}\n\nexport default NewPassword;","import React from \"react\";\nimport \"./404.module.css\"\n\n\n\nconst Four = () => {\n\n\n    return <div className=\"Four\">\n\n    </div>\n}\n\nexport default Four;","export function validate(values: Validate) {\n    let errors: Validate = {};\n    if (!values.email) errors.email = 'Email address is required'\n    else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) errors.email = 'Email address is invalid'\n    if (!values.password) errors.password = 'Password is required'\n    else if (values.password.length < 6) errors.password = 'Password must be 6 or more characters'\n    return errors;\n}\n\nexport function emailValidate(values: Validate) {\n    let errors: Validate = {};\n    if (!values.email) errors.email = 'Email address is required'\n    else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) errors.email = 'Email address is invalid'\n    return errors;\n}\n\n// types\nexport type Validate = {\n    email?: string | undefined\n    password?: string | undefined\n}\n\n\n/*let errors: Validate = {};\n\nexport function validate(inputs: Array<Inputs>) {\n    return (values: Validate) => {\n        inputs.forEach(item => {\n                if (validators[item]) validators[item](values)\n            }\n        )\n        return errors;\n    }\n}\n\nconst validators = {\n    email: (values: Validate) => {\n        if (!values.email) errors.email = 'Email address is required'\n        else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) errors.email = 'Email address is invalid'\n    },\n    password: (values: Validate) => {\n        if (!values.password) errors.password = 'Password is required'\n        else if (values.password.length < 6) errors.password = 'Password must be 6 or more characters'\n    }\n}\n\n// types\nexport type Validate = {\n    email?: string | undefined\n    password?: string | undefined\n}\nexport type Inputs = 'email' | 'password'*/","import React, {useState} from \"react\";\nimport styles from \"./password_recovery.module.css\"\nimport {Api} from \"../../API/API\";\nimport {emailValidate} from \"../../common/helpers/validations_rules\";\nimport {useForm} from \"../../common/customHooks/useForm\";\n\n\nexport const PasswordRecovery = () => {\n    let [responseMessage, setResponseMessage] = useState<string | undefined>('')\n    let [isDisable, setIsDisable] = useState<boolean>(false)\n\n    const submitCallback = async () => {\n        setIsDisable(true)\n        try {\n            let response = await Api.recoveryPassword(values.email)\n            setResponseMessage(response.data.info)\n        } catch (error) {\n            errors.email = error.response.data.error\n        } finally {\n            setIsDisable(false)\n        }\n    }\n\n    const {\n        values,\n        errors,\n        handleChange,\n        handleSubmit,\n    } = useForm(submitCallback, emailValidate)\n\n\n    return <>\n            <div className={styles.password_recovery}>\n            <p>Enter your email address<br/>to recover your password</p>\n            <div>\n                <form onSubmit={handleSubmit} noValidate>\n                    <div className='mb-3'>\n                        <input\n                            type='email'\n                            name='email'\n                            value={values.email || ''}\n                            className={`form-control ${errors.email && 'is-invalid'}`}\n                            placeholder='Email'\n                            aria-describedby='emailHelp'\n                            onChange={handleChange}\n                            disabled={isDisable}\n                            autoComplete='off'\n                        />\n                        {errors.email && <div className='invalid-feedback'>{errors.email}</div>}\n                        {responseMessage && <div className={styles.responseMessage}>{responseMessage}</div>}\n                    </div>\n                    <button\n                        className='btn btn-primary'\n                        type='submit'\n                    >Send\n                    </button>\n                </form>\n            </div>\n        </div>\n    </>\n}","import {useState, useEffect, ChangeEvent, FormEvent} from 'react';\nimport {Validate} from \"../helpers/validations_rules\";\n\nexport const useForm = (\n    callback: () => Promise<void>,\n    validate: (values: Validate) => Validate) => {\n\n    const [values, setValues] = useState<Validate>({});\n    const [errors, setErrors] = useState<Validate>({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    useEffect(() => {\n        if (Object.keys(errors).length === 0 && isSubmitting) {\n            callback();\n        }\n    }, [errors]);\n\n    const handleSubmit = (event: FormEvent) => {\n        if (event) event.preventDefault();\n        setErrors(validate(values));\n        setIsSubmitting(true);\n    };\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n        event.persist();\n        setValues(values => ({...values, [event.target.name]: event.target.value}));\n    };\n\n    return {\n        handleChange,\n        handleSubmit,\n        values,\n        errors,\n    }\n};","import React from \"react\";\nimport './App.css';\nimport Navbar from './components/navbar/Navbar'\nimport {BrowserRouter,Route} from \"react-router-dom\";\nimport Profile from \"./components/Profile/Profile\";\nimport LogIn from \"./components/LogIn/log_in\";\nimport Register from \"./components/register/register\";\nimport NewPassword from \"./components/new_password/new_password\";\nimport Four from \"./components/404/404\";\nimport {PasswordRecovery} from \"./components/password-recovery/password_recovery\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <div className=\"App\">\n            <Navbar/>\n            <div className=\"RenderPlace\">\n                <Route path={\"/Profile\"} component={Profile}/>\n                <Route path={\"/Log_in\"} component={LogIn}/>\n                <Route path={\"/Register\"} component={Register}/>\n                <Route path={\"/New_Password\"} component={NewPassword}/>\n                <Route path={\"/PasswordRecovery\"} component={PasswordRecovery}/>\n                <Route path={\"/404\"} component={Four}/>\n            </div>\n        </div>\n        \n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, applyMiddleware,createStore} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport {userReducer} from \"./user-reducer\";\nimport {logInReducer} from \"./log_in-reducer\";\nimport {registerReducer} from \"./register-reducer\";\n\n// import { reducer as formReducer } from 'redux-form'\n\n\n\nconst rootReducer = combineReducers({\n    user:userReducer,\n    logIn:logInReducer,\n    register: registerReducer,\n    // form:formReducer\n})\n\nexport const store = createStore(rootReducer,applyMiddleware(thunkMiddleware))\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n\n\n// @ts-ignore\nwindow.store = store;","type actionType = {\n    type:\"Add\"\n}\n\n\nexport const userReducer = (state:string = 'Nikita',action:actionType) => {\n    switch (action.type){\n        case \"Add\":\n            return state\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n      <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}