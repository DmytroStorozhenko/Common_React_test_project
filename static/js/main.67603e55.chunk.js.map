{"version":3,"sources":["components/search/search.module.css","components/LogIn/log_in.module.css","components/register/register.module.css","components/new_password/new_password.module.css","components/password-recovery/password_recovery.module.css","components/navbar/navbar.module.css","components/pagination/pagination.module.css","components/Profile/Profile.module.css","components/404/404.module.css","components/navbar/Navbar.tsx","API/instance.ts","API/API.ts","store/profile-reducer.ts","API/packsAPI.ts","store/pagination-reducer.ts","components/pagination/pagination.tsx","store/sort-reducer.ts","components/SortPacks/SortPacks.tsx","components/Profile/Profile.tsx","components/LogIn/loginForm.tsx","store/loginError-reducer.ts","store/log_in-reducer.tsx","components/LogIn/log_in.tsx","store/register-reducer.tsx","components/register/registerForm.tsx","components/register/register.tsx","common/helpers/validations_rules.ts","common/customHooks/useForm.ts","components/new_password/new_password.tsx","components/404/404.tsx","components/password-recovery/password_recovery.tsx","store/search-reducer.ts","store/table-reducer.ts","components/search/Search.tsx","components/table/tableItemName.tsx","components/table/TableItem.tsx","components/table/table.tsx","App.tsx","reportWebVitals.ts","store/store.ts","store/user-reducer.ts","index.tsx"],"names":["module","exports","routes","Navbar","className","classes","to","instance","axios","create","baseURL","withCredentials","Api","email","password","post","from","message","resetPasswordToken","initialStateProfile","name","avatar","packsAPI","params","get","sortPacks","page","pageCount","id","delete","_id","put","cardsPack","initialState","cardPacksTotalCount","pageAC","type","Pagination","useSelector","state","pagination","dispatch","useDispatch","CountOfPages","Math","ceil","pages","i","push","handlerPagination","pageNumber","then","res","pageCountAC","paginationTC","map","p","onClick","e","style","SelectPage","sortCards","sortPacksAC","SortPacks","console","log","data","sortPacksUpTC","sortPacksDownTC","Profile","profileData","profileDate","useEffect","catch","error","src","alt","LogInFrom","props","width","height","emailError","aria-describedby","placeholder","value","onChange","emailChange","color","passwordError","passwordChange","textDecoration","logIn","errorLoginEmailAC","errorMessage","errorLoginPasswordAC","errorMessagePassword","LogInAC","verified","LogIn","loginDate","useState","setEmail","setPassword","Login","H1","event","currentTarget","test","length","LogInThunk","isRegistered","setError","ErrorAC","RegisterForm","register","Register","Password","confirmPassword","setConfirmPassword","Button","signUp","isRegisteredUser","RegisterTC","emailValidate","values","errors","useForm","callback","validate","setValues","setErrors","isSubmitting","setIsSubmitting","Object","keys","handleChange","persist","target","handleSubmit","preventDefault","NewPassword","responseMessage","setResponseMessage","isDisable","setIsDisable","token","useParams","a","response","info","setTimeout","styles","new_password","onSubmit","noValidate","disabled","autoComplete","spinner","role","Four","fontSize","PasswordRecovery","password_recovery","minCardsCount","maxCardsCount","getTableAC","tableData","Search","packsSearch","searchRequest","setSearchRequest","searchBlock","onSearchHandler","input","rangeGroup","range","step","min","max","renderTrack","children","onMouseDown","onTouchStart","display","margin","ref","borderRadius","background","getTrackBackground","colors","alignSelf","renderThumb","index","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","position","top","fontWeight","fontFamily","padding","toFixed","packName","cardPacks","searchPacks","TableItemName","editMode","setEditMode","setName","onDoubleClick","changeTableItemNameThunk","TableItem","cardsCount","user_name","updated","alert","Table","massResult","t","scope","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","user","action","tableDateDeleted","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67603e55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBlock\":\"search_searchBlock__6q_D2\",\"input\":\"search_input__OHWDP\",\"rangeGroup\":\"search_rangeGroup__X4QyW\",\"range\":\"search_range__30RZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"log_in_Login__2qeof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Register\":\"register_Register__1oR1d\",\"Button\":\"register_Button__v6Meb\",\"Password\":\"register_Password__1AZeU\",\"Error\":\"register_Error__3Cp_l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewPassword\":\"new_password_NewPassword__2Ufm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"password_recovery\":\"password_recovery_password_recovery__3IonX\",\"spinner\":\"password_recovery_spinner__9oi2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"navbar_Navbar__1DAnW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectPage\":\"pagination_SelectPage__1XPZM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__8Ign9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Four\":\"404_Four__tsxYV\"};","import React from \"react\";\r\nimport {NavLink,Redirect} from \"react-router-dom\";\r\nimport './navbar.module.css'\r\nimport classes from \"./navbar.module.css\"\r\n\r\n\r\nexport const routes = {\r\n    forProfile:\"/Profile\",\r\n    forLogin:\"/Log_in\",\r\n    forRegister:\"/Register\",\r\n    foNewPassword:\"/New_Password\",\r\n    forPasswordRecovery:\"/PasswordRecovery\",\r\n    forMistake:\"/404\",\r\n    forTable:\"/Table\"\r\n}\r\n\r\n\r\nconst Navbar = () => {\r\n    return <div className={classes.Navbar}>\r\n        <ul className=\"nav nav-tabs\">\r\n            <li className=\"nav-item\">\r\n                <NavLink to={routes.forProfile} className=\"nav-link\">Profile</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink to={routes.forLogin} className=\"nav-link\" >Log_in</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink to={routes.forRegister} className=\"nav-link\" >Register</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink to={routes.foNewPassword} className=\"nav-link\">New_Password</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink to={routes.forPasswordRecovery} className=\"nav-link\">Password recovery</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink to={routes.forTable} className=\"nav-link\">Table</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink to={routes.forMistake} className=\"nav-link\">404</NavLink>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nexport default Navbar;","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: \"http://localhost:7542/2.0/\",\r\n    withCredentials: true\r\n})","import {instance} from \"./instance\";\r\n\r\n\r\ntype pingType = {\r\n    backTime: number\r\n    frontTime: string\r\n    info: string\r\n    ping: number\r\n}\r\ntype LogInType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number\r\n    created: Date\r\n    update: Date\r\n    isAdmin: boolean\r\n    verified: boolean\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\ntype RegisterType = {\r\n    addedUser: {\r\n        created: Date\r\n        email: string\r\n        isAdmin: boolean\r\n        name: string\r\n        publicCardPacksCount: number\r\n        updated: Date\r\n        verified: boolean\r\n        __v: number\r\n        _id: string\r\n    }\r\n    error?: string\r\n}\r\ntype profileDateType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardsPacksCount: number;\r\n\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean,\r\n    verified: boolean,\r\n    rememberMe: boolean,\r\n\r\n    error?: string\r\n}\r\n\r\nexport type RecoveryResponseType = {\r\n    info?: string\r\n    error?: string\r\n}\r\n\r\nexport const Api = {\r\n    getPing: () => {\r\n        const promise = instance.get<pingType>(\"ping\")\r\n        return promise\r\n    },\r\n    logIn: (email: string, password: string) => {\r\n        const promise = instance.post<LogInType>(\"auth/login\", {email, password})\r\n        return promise\r\n    },\r\n    register: (email: string, password: string) => {\r\n        const promise = instance.post<RegisterType>(\"auth/register\", {email, password})\r\n        return promise\r\n    },\r\n    recoveryPassword: (email: string | undefined) => {\r\n        const from = `dmytrostorozhenko1994@gmail.com`\r\n        const message =\r\n            `<div>Your password recover link is <a href='http://localhost:3000/#/set-new-password/$token$'>here</a></div>`\r\n        return instance.post<RecoveryResponseType>(\"auth/forgot\", {email, from, message})\r\n    },\r\n    setNewPassword: ( password: string | undefined, resetPasswordToken: string | undefined) => {\r\n        return instance.post<RecoveryResponseType>('auth/set-new-password', {})\r\n    },\r\n    profileDate: () => {\r\n        const promise = instance.post<any>(\"auth/me\", {})\r\n        return promise\r\n    },\r\n    profileUpdate: (name: string, avatar: string) => {\r\n        const promise = instance.put(\"auth/me\", {name, avatar})\r\n        return promise\r\n    }\r\n}","import {Dispatch} from 'redux'\r\nimport {Api} from \"../API/API\";\r\n\r\nexport type stateProfileType = {\r\n    name:string,\r\n    avatar:string\r\n}\r\nconst initialStateProfile = {\r\n    name:\"\",\r\n    avatar:\"\"\r\n}\r\n\r\n\r\ntype typeGetProfileData = {\r\n    type:\"GET-PROFILE-DATA\"\r\n    name:string,\r\n    avatar:string | undefined\r\n}\r\ntype actionProfileType  = typeGetProfileData\r\n\r\n\r\nexport const profileReducer = (state:stateProfileType = initialStateProfile ,action:actionProfileType) => {\r\n    switch (action.type){\r\n        case \"GET-PROFILE-DATA\":\r\n            return {...state,name:action.name,avatar:action.avatar}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nconst profileGetDataAC = (name:string,avatar:string | undefined) => {\r\n    return {\r\n        type:\"GET-PROFILE-DATA\",\r\n        name,\r\n        avatar\r\n    }\r\n}\r\n\r\nexport const profileDateThunk = () => {\r\n    return(dispatch:Dispatch) => {\r\n        Api.profileDate()\r\n            .then((res) => {\r\n                dispatch(profileGetDataAC(res.data.name,res.data.avatar))\r\n            }).catch((error) => {\r\n\r\n        })\r\n    }\r\n}","import {instance} from \"./instance\";\r\n\r\nexport const packsAPI = {\r\n    getPacks: (params: GetPacksRequestType)=> {\r\n        return instance.get<GetPacksResponseType>('cards/pack?user_id=' + \"606b7897ca54343f745ebeb1\", {params})\r\n    },\r\n    getPacksSortUp: (sortPacks: number) => {\r\n        return instance.get(`cards/pack?sortPacks=${1}cardsCount`)\r\n    },\r\n    getPacksSortDown: (sortPacks: number) => {\r\n        return instance.get(`cards/pack?sortPacks=${0}cardsCount`)\r\n    },\r\n    pagination: (page: number, pageCount: number)=> {\r\n        return instance.get<GetPacksResponseType>(`cards/pack?pageCount${pageCount}&page=${page}`)\r\n    },\r\n    deleteItemsTable:(id:string) => {\r\n        return instance.delete(`cards/pack?${id}`)\r\n    },\r\n    changeNameItem:(_id:string,name:string) => {\r\n        return instance.put('cards/pack',{cardsPack:{_id,name}})\r\n    }\r\n}\r\n\r\n// types\r\nexport type GetPacksRequestType = {\r\n    packName?: string\r\n    min?: number\r\n    max?: number\r\n    sortPacks?: string\r\n    page?: number\r\n    pageCount?: number\r\n    user_id?: string\r\n}\r\n\r\ntype GetPacksResponseType = {\r\n    cardPacks: Array<GetPackType>\r\n    page: number\r\n    pageCount: number\r\n    cardPacksTotalCount: number\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n}\r\n\r\nexport type GetPackType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name?: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grade: number\r\n    shots: number\r\n    cardsCount: number\r\n    type: \"pack\" | \"folder\"\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    more_id?: string\r\n    __v: number\r\n}\r\n\r\n","import {Dispatch} from 'redux'\r\nimport {packsAPI} from \"../API/packsAPI\";\r\n\r\ntype actionType = ReturnType<typeof cardPacksTotalCountAC>\r\n    | ReturnType<typeof pageCountAC>\r\n    | ReturnType<typeof pageAC>\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    cardPacksTotalCount: 40,\r\n    pageCount: 10,\r\n    page: 1\r\n\r\n}\r\n\r\nexport const paginationReducer = (state: initialStateType = initialState, action: actionType) => {\r\n    switch (action.type) {\r\n        case \"CARDS-PACKS-TOTAL-COUNT\":\r\n            return {...state, cardPacksTotalCount: action.cardPacksTotalCount}\r\n        case \"PAGE-COUNT\":\r\n            return {...state, pageCount: action.pageCount}\r\n        case \"PAGE\":\r\n            return {...state, page: action.page}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const cardPacksTotalCountAC = (cardPacksTotalCount: number) => ({\r\n    type: 'CARDS-PACKS-TOTAL-COUNT',\r\n    cardPacksTotalCount\r\n} as const)\r\nexport const pageCountAC = (pageCount: number) => ({type: 'PAGE-COUNT', pageCount} as const)\r\nexport const pageAC = (page: number) => ({type: 'PAGE', page} as const)\r\n\r\n\r\nexport const paginationTC = (page: number, pageCount: number) => (dispatch: Dispatch) => {\r\n    packsAPI.pagination(page, pageCount)\r\n        .then((res) => {\r\n            dispatch(pageAC(page))\r\n            dispatch(pageCountAC(pageCount))\r\n\r\n\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport style from './pagination.module.css'\r\nimport {pageAC, paginationTC} from \"../../store/pagination-reducer\";\r\n\r\n\r\nconst Pagination = () => {\r\n\r\n\r\n    const pageCount = useSelector<AppRootStateType, number>(state => state.pagination.pageCount)\r\n    const cardPacksTotalCount = useSelector<AppRootStateType, number>(state => state.pagination.cardPacksTotalCount)\r\n    const page = useSelector<AppRootStateType, number>(state => state.pagination.page)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const CountOfPages = Math.ceil(cardPacksTotalCount / pageCount)\r\n    const pages = []\r\n    for (let i = 1; i <= CountOfPages; i++) {\r\n        pages.push(i)\r\n    }\r\n    const handlerPagination = (pageNumber: number) => {\r\n        dispatch(pageAC(pageNumber))\r\n        dispatch(paginationTC(pageNumber, pageCount))\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n                {\r\n                    pages.map((p, id) =>\r\n                        <button key={id} onClick={(e) => handlerPagination(p)} className={page === p ? style.SelectPage : ''}>{p}</button>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Pagination","import {Dispatch} from 'redux'\r\nimport {packsAPI} from \"../API/packsAPI\";\r\nimport {Api} from \"../API/API\";\r\nimport {ErrorAC, RegisterAC} from \"./register-reducer\";\r\n\r\ntype actionType = ReturnType<typeof sortPacksAC>\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    sortCards: 0\r\n}\r\n\r\nexport const sortReducer = (state: initialStateType = initialState, action: actionType) => {\r\n    switch (action.type) {\r\n        case \"SORT-PACKS\":\r\n            return {...state, sortCards: action.sortCards}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sortPacksAC = (sortPacks: number) => ({type: 'SORT-PACKS', sortCards: sortPacks} as const)\r\n\r\nexport const sortPacksDownTC = (sortPacks: number) => (dispatch: Dispatch) => {\r\n    packsAPI.getPacksSortUp(sortPacks)\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            dispatch(sortPacksAC(0))\r\n        })\r\n}\r\nexport const sortPacksUpTC = (sortPacks: number) => (dispatch: Dispatch) => {\r\n    packsAPI.getPacksSortDown(sortPacks)\r\n        .then((res) => {\r\n            console.log(res.data)\r\n            dispatch(sortPacksAC(1))\r\n        })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sortPacksDownTC, sortPacksUpTC} from \"../../store/sort-reducer\";\r\nimport style from './sort.module.css'\r\nimport {AppRootStateType} from \"../../store/store\";\r\n\r\n\r\n\r\nconst SortPacks = () => {\r\n    const sortPacks = useSelector<AppRootStateType, number>(state => state.sortPacks.sortCards)\r\n    const dispatch = useDispatch()\r\n\r\n    const sortUpHandler = () => {\r\n        dispatch(sortPacksUpTC(sortPacks))\r\n    }\r\n    const sortDownHandler = () => {\r\n        dispatch(sortPacksDownTC(sortPacks))\r\n    }\r\n    return(\r\n        <div>\r\n            <button onClick={sortUpHandler}>/\\</button>\r\n            <button onClick={sortDownHandler}>\\/</button>\r\n\r\n        </div>\r\n    )\r\n\r\n    }\r\n\r\nexport default SortPacks","import React, {useEffect, useState} from \"react\";\r\nimport \"./Profile.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {stateProfileType} from \"../../store/profile-reducer\";\r\nimport {profileDateThunk} from \"../../store/profile-reducer\";\r\nimport Pagination from \"../pagination/pagination\";\r\nimport SortPacks from \"../SortPacks/SortPacks\";\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    let profileData = useSelector<AppRootStateType,stateProfileType>(state => state.profileDate)\r\n\r\n    useEffect(() => {\r\n       dispatch(profileDateThunk())\r\n   },[])\r\n\r\n\r\n\r\n    return <div className=\"Profile\">\r\n        <Pagination/>\r\n        <SortPacks/>\r\n        <h1>Profile</h1>\r\n        <div>{profileData.name}</div>\r\n        <div>\r\n            <img src={profileData.avatar} alt={\"hello\"}/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React, {ChangeEvent} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {stateTypeForError} from '../../store/loginError-reducer'\r\n\r\ntype propsType = {\r\n    password:string;\r\n    email:string;\r\n    emailChange:(event:ChangeEvent<HTMLInputElement>) => void;\r\n    passwordChange:(event:ChangeEvent<HTMLInputElement>) => void;\r\n    logIn:() => void;\r\n}\r\n\r\n\r\nconst LogInFrom = (props:propsType) => {\r\n\r\n    const error = useSelector<AppRootStateType,stateTypeForError>(state => state.error)\r\n\r\n\r\n\r\n\r\n    return (\r\n            <div style={{width:\"100%\",height:'200px'}}>\r\n                <div className=\"mb-3\">\r\n                    <input\r\n                        type=\"email\"\r\n                        className={error.emailError ? \"form-control is-invalid\" : \"form-control\"}\r\n                        id=\"exampleInputEmail1\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        placeholder={\"Email\"}\r\n                        value={props.email}\r\n                        onChange={props.emailChange}\r\n                    />\r\n                    {error.emailError && <div style={{color:\"red\"}}>{error.emailError}</div>}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className={error.passwordError ? \"form-control is-invalid\" : \"form-control\"}\r\n                        id=\"exampleInputPassword1\"\r\n                        placeholder={\"Password\"}\r\n                        value={props.password}\r\n                        onChange={props.passwordChange}\r\n                    />\r\n                    {error.passwordError && <div style={{color:\"red\"}}>{error.passwordError}</div>}\r\n                </div>\r\n                <div className=\"mb-3 form-check\">\r\n                    <NavLink to={\"/PasswordRecovery\"} style={{textDecoration:'none'}}>forgot password</NavLink>\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => {props.logIn()}}\r\n                >Submit</button>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default LogInFrom;","export type stateTypeForError = {\r\n    emailError:string,\r\n    passwordError:string\r\n}\r\n\r\ntype actionTypeForErrorEmail = {\r\n    type:\"ERROR-EMAIL\"\r\n    errorMessage:string\r\n}\r\ntype actionTypeForErrorPassword = {\r\n    type:\"ERROR-PASSWORD\"\r\n    errorMessagePassword:string\r\n}\r\ntype actionTypeForError = actionTypeForErrorEmail | actionTypeForErrorPassword\r\n\r\nconst initialState:stateTypeForError = {\r\n    emailError:\"\",\r\n    passwordError:\"\"\r\n}\r\n\r\nexport const loginErrorReducer = (state:stateTypeForError = initialState,action:actionTypeForError) => {\r\n    switch (action.type){\r\n        case \"ERROR-EMAIL\":\r\n            return {...state,emailError: action.errorMessage}\r\n        case \"ERROR-PASSWORD\":\r\n            return {...state,passwordError:action.errorMessagePassword}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport const errorLoginEmailAC = (errorMessage:string) => {\r\n    return {\r\n        type:\"ERROR-EMAIL\",\r\n        errorMessage\r\n    }\r\n}\r\nexport const errorLoginPasswordAC = (errorMessagePassword:string) => {\r\n    return {\r\n        type:\"ERROR-PASSWORD\",\r\n        errorMessagePassword\r\n    }\r\n}","import {Dispatch} from 'redux'\r\nimport {Api} from \"../API/API\";\r\n\r\ntype verifiedType = \"true\" | \"false\" | \"none\"\r\n\r\ntype actionLogINType = {\r\n    type:\"LOGIN\"\r\n    email:string\r\n    password:string\r\n    verified:verifiedType\r\n    _id:string\r\n}\r\ntype resetVerifiedType = {\r\n    type:\"RESET\"\r\n}\r\nexport type stateType = {\r\n    email:string,\r\n    password:string,\r\n    verified:verifiedType\r\n}\r\n\r\ntype actionLoginType = actionLogINType | resetVerifiedType\r\n\r\nexport const logInReducer = (state:stateType = {email:\"\",password:\"\",verified:\"none\"},action:actionLoginType) => {\r\n    switch (action.type){\r\n        case \"LOGIN\":\r\n            return {\r\n                email:action.email,\r\n                password:action.password,\r\n                verified:action.verified,\r\n                _id:action._id\r\n            }\r\n        case \"RESET\":\r\n            return {...state,verified:\"none\"}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const LogInAC = (email:string,password:string,verified:verifiedType) => {\r\n    return {\r\n        type:\"LOGIN\",\r\n        email,\r\n        password,\r\n        verified,\r\n    }\r\n}\r\nexport const ResetAC = () => {\r\n    return {\r\n        type:\"RESET\"\r\n    }\r\n}\r\n\r\n\r\nexport const LogInThunk = (email:string,password:string) => {\r\n    return (dispatch:Dispatch) => {\r\n        Api.logIn(email,password)\r\n            .then((res) => {\r\n                dispatch(LogInAC(email,password,\"true\"))\r\n                console.log(res.data._id)\r\n                console.log(res.data)\r\n            }).catch((error) => {\r\n                dispatch(LogInAC(email,password,\"false\"))\r\n        })\r\n    }\r\n\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport './log_in.module.css'\r\nimport classes from './log_in.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport LogInFrom from \"./loginForm\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport {AppRootStateType, store} from \"../../store/store\";\r\nimport {routes} from \"../navbar/Navbar\";\r\nimport {stateType} from \"../../store/log_in-reducer\";\r\nimport {errorLoginEmailAC,errorLoginPasswordAC} from '../../store/loginError-reducer'\r\nimport {LogInThunk} from '../../store/log_in-reducer'\r\n\r\n\r\n\r\nconst LogIn = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const loginDate = useSelector<AppRootStateType,stateType>(state => state.logIn)\r\n    console.log(loginDate.email)\r\n    console.log(loginDate.verified)\r\n\r\n    let [email,setEmail] = useState<string>(\"\")\r\n    let [password,setPassword] = useState<string>(\"\")\r\n\r\n    // Functions\r\n    const logIn = () => {\r\n\r\n        if(!email && !password){\r\n            dispatch(errorLoginEmailAC(\"enter email,please\"))\r\n            dispatch(errorLoginPasswordAC(\"enter password,please\"))\r\n        }else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n            dispatch(errorLoginEmailAC(\"email is not valid\"))\r\n        }else if (!password){\r\n            dispatch(errorLoginPasswordAC(\"enter password\"))\r\n        }else if (password.length<5){\r\n            errorLoginPasswordAC(\" \")\r\n        }else {\r\n            dispatch(LogInThunk(email,password))\r\n        }\r\n\r\n    }\r\n    const emailChange = (event:ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(event.currentTarget.value)\r\n    }\r\n    const passwordChange = (event:ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.currentTarget.value)\r\n    }\r\n\r\n\r\n    // Redirects\r\n    if(loginDate.verified === \"true\"){\r\n        return <Redirect to={routes.forProfile}/>\r\n    }\r\n    if(loginDate.verified === \"false\"){\r\n        return  <Redirect to={routes.forRegister}/>\r\n    }\r\n\r\n\r\n    return <div className={classes.Login}>\r\n        <h1 className={classes.H1} >Login</h1>\r\n        <LogInFrom\r\n            password={password}\r\n            email={email}\r\n            emailChange={emailChange}\r\n            passwordChange={passwordChange}\r\n            logIn={logIn}\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default LogIn;","import {Dispatch} from 'redux'\r\nimport {Api} from \"../API/API\";\r\n\r\ntype actionType = ReturnType<typeof RegisterAC>\r\n                | ReturnType<typeof ErrorAC>\r\n\r\ntype initialStateType = typeof initialState\r\n\r\n\r\nconst initialState = {\r\n    isRegistered: false,\r\n    setError: ''\r\n}\r\n\r\n\r\nexport const registerReducer = (state: initialStateType = initialState,action:actionType) => {\r\n    switch (action.type){\r\n        case \"REGISTER\":\r\n            return   {...state,\r\n                isRegistered: action.isRegistered\r\n            }\r\n        case \"ERROR\":\r\n            return   {...state,\r\n                setError: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const RegisterAC = (isRegistered: boolean) => ({\r\n    type:\"REGISTER\",\r\n    isRegistered\r\n} as const)\r\nexport const ErrorAC = (error: string) => ({\r\n    type:\"ERROR\",\r\n    error\r\n} as const)\r\n\r\n\r\nexport const RegisterTC = (email:string,password:string) => (dispatch:Dispatch) => {\r\n    Api.register(email,password)\r\n        .then((res) => {\r\n            dispatch(RegisterAC(true))\r\n        })\r\n        .catch((error) => {\r\n            dispatch(ErrorAC(error.error))\r\n        })\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport style from './register.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\n\r\ntype registerFormType = {\r\n    email: string\r\n    password: string\r\n    confirmPassword: string\r\n    setEmail: (value: string) => void\r\n    setPassword: (value: string) => void\r\n    setConfirmPassword: (value: string) => void\r\n    signUp: () => void\r\n}\r\n\r\n\r\nconst RegisterForm = (props: registerFormType) => {\r\n\r\n    const error = useSelector<AppRootStateType, string>(state => state.register.setError)\r\n\r\n\r\n    const onChangeLoginHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setEmail(e.currentTarget.value)\r\n    }\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setPassword(e.currentTarget.value)\r\n    }\r\n    const onChangeConfirmPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setConfirmPassword(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={style.Register}>\r\n            <div >\r\n                <input type=\"email\"\r\n                       className={`form-control ${error && 'is-invalid'}`}\r\n                       id=\"floatingInput\"\r\n                       placeholder=\"Login\"\r\n                       value={props.email}\r\n                       onChange={onChangeLoginHandler}/>\r\n            </div>\r\n\r\n            <div className={style.Password}>\r\n                <input type=\"password\"\r\n                       className={`form-control ${error && 'is-invalid'}`}\r\n                       id=\"floatingPassword\"\r\n                       placeholder=\"Password\"\r\n                       value={props.password}\r\n                       onChange={onChangePasswordHandler}/>\r\n            </div>\r\n\r\n            <div>\r\n                <input type=\"password\"\r\n                       className={`form-control ${error && 'is-invalid'}`}\r\n                       id=\"floatingPassword\"\r\n                       placeholder=\"Confirm password\"\r\n                       value={props.confirmPassword}\r\n                       onChange={onChangeConfirmPasswordHandler}/>\r\n            </div>\r\n            {error && <div className=\"style.Error\">{error}</div>}\r\n\r\n            <div className={style.Button}>\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={() => props.signUp()}>Sign up</button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default RegisterForm","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {ErrorAC, RegisterTC} from \"../../store/register-reducer\";\r\nimport RegisterForm from \"./registerForm\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {routes} from \"../navbar/Navbar\";\r\n\r\n\r\n\r\nconst Register = () => {\r\n    const dispatch = useDispatch()\r\n    const isRegisteredUser = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n    const error = useSelector<AppRootStateType, string>(state => state.register.setError)\r\n    let [email, setEmail] = useState('')\r\n    let [password, setPassword] = useState('')\r\n    let [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n\r\n    const signUp = () => {\r\n\r\n        if (!email) {\r\n            dispatch(ErrorAC('Email address is required'))\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n            dispatch(ErrorAC('Please, enter correct email'))\r\n        } else if (password != confirmPassword) {\r\n            dispatch(ErrorAC('Password confirmation does not match'))\r\n        } else if (password.length < 6) {\r\n            dispatch(ErrorAC('Password must be 6 or more characters'))\r\n            return error\r\n        } else\r\n            dispatch(RegisterTC(email, password))\r\n\r\n            }\r\n\r\n    const setEmailChange = (value: string) => {\r\n        setEmail(value)\r\n    }\r\n    const setPasswordChange = (value: string) => {\r\n        setPassword(value)\r\n    }\r\n    const setConfirmPasswordChange = (value: string) => {\r\n        setConfirmPassword(value)\r\n    }\r\n\r\n\r\n    return <>\r\n        {isRegisteredUser &&\r\n        < Redirect to={routes.forLogin}/>}\r\n        <div className=\"Register\">\r\n            <h1>Register</h1>\r\n            <RegisterForm\r\n                email={email}\r\n                password={password}\r\n                confirmPassword={confirmPassword}\r\n                setConfirmPassword={setConfirmPasswordChange}\r\n                setEmail={setEmailChange}\r\n                setPassword={setPasswordChange}\r\n                signUp={signUp}\r\n            />\r\n\r\n\r\n        </div>\r\n\r\n    </>\r\n\r\n}\r\nexport default Register\r\n","export function validate(values: Validate) {\r\n    let errors: Validate = {};\r\n    if (!values.email) errors.email = 'Email address is required'\r\n    else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) errors.email = 'Email address is invalid'\r\n    if (!values.password) errors.password = 'Password is required'\r\n    else if (values.password.length < 6) errors.password = 'Password must be 6 or more characters'\r\n    return errors;\r\n}\r\n\r\nexport function emailValidate(values: Validate) {\r\n    let errors: Validate = {};\r\n    if (!values.email) errors.email = 'Email address is required'\r\n    else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) errors.email = 'Email address is invalid'\r\n    return errors;\r\n}\r\n\r\nexport function newPasswordValidate(values: Validate) {\r\n    let errors: Validate = {};\r\n    if (!values.password || !values.confirmPassword) errors.password = 'Password is required'\r\n    else if (values.password.length < 6) errors.password = 'Password must be 6 or more characters'\r\n    else if (values.confirmPassword !== values.password) errors.password = \"Passwords don't match\"\r\n    return errors;\r\n}\r\n\r\n// types\r\nexport type Validate = {\r\n    email?: string | undefined\r\n    password?: string | undefined\r\n    confirmPassword?: string | undefined\r\n}","import {useState, useEffect, ChangeEvent, FormEvent} from 'react';\r\nimport {Validate} from \"../helpers/validations_rules\";\r\n\r\nexport const useForm = (\r\n    callback: () => Promise<void>,\r\n    validate: (values: Validate) => Validate) => {\r\n\r\n    const [values, setValues] = useState<Validate>({});\r\n    const [errors, setErrors] = useState<Validate>({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && isSubmitting) {\r\n            callback();\r\n        }\r\n    }, [errors]);\r\n\r\n    const handleSubmit = (event: FormEvent) => {\r\n        if (event) event.preventDefault();\r\n        setErrors(validate(values));\r\n        setIsSubmitting(true);\r\n    };\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        event.persist();\r\n        setValues(values => ({...values, [event.target.name]: event.target.value}));\r\n    };\r\n\r\n    return {\r\n        handleChange,\r\n        handleSubmit,\r\n        values,\r\n        errors,\r\n    }\r\n};","import React, {useState} from \"react\";\r\nimport styles from \"./new_password.module.css\"\r\nimport {Api} from \"../../API/API\";\r\nimport {emailValidate} from \"../../common/helpers/validations_rules\";\r\nimport {useForm} from \"../../common/customHooks/useForm\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {routes} from \"../navbar/Navbar\";\r\n\r\nexport const NewPassword = () => {\r\n    let [responseMessage, setResponseMessage] = useState<string | undefined>('')\r\n    let [isDisable, setIsDisable] = useState<boolean>(false)\r\n    let {token} = useParams<{token?: string }>();\r\n\r\n    const submitCallback = async () => {\r\n        setIsDisable(true)\r\n        try {\r\n            let response = await Api.setNewPassword(values.confirmPassword, token)\r\n            setResponseMessage(response.data.info)\r\n            setTimeout(() => {\r\n                return <Redirect to={routes.forLogin}/>\r\n            }, 3000)\r\n        } catch (error) {\r\n            errors.confirmPassword = error.response.data.error\r\n        } finally {\r\n            setIsDisable(false)\r\n        }\r\n    }\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n    } = useForm(submitCallback, emailValidate)\r\n\r\n\r\n    return <>\r\n        <div className={styles.new_password}>\r\n            <p>Enter your new password:</p>\r\n            <div>\r\n                <form onSubmit={handleSubmit} noValidate>\r\n                    <div className='mb-3'>\r\n                        <input\r\n                            type='password'\r\n                            name='password'\r\n                            value={values.password || ''}\r\n                            className={`form-control ${errors.password && 'is-invalid'}`}\r\n                            placeholder='New password'\r\n                            onChange={handleChange}\r\n                            disabled={isDisable}\r\n                            autoComplete='off'\r\n                        />\r\n                        {errors.password && <div className='invalid-feedback'>{errors.password}</div>}\r\n                        <input\r\n                            type='password'\r\n                            name='confirmPassword'\r\n                            value={values.confirmPassword || ''}\r\n                            className={`form-control ${errors.confirmPassword && 'is-invalid'}`}\r\n                            placeholder='Confirm password'\r\n                            onChange={handleChange}\r\n                            disabled={isDisable}\r\n                            autoComplete='off'\r\n                        />\r\n                        {errors.confirmPassword && <div className='invalid-feedback'>{errors.confirmPassword}</div>}\r\n                        {responseMessage && <div className={styles.responseMessage}>{responseMessage}</div>}\r\n                        {isDisable && <div className={`spinner-border ${styles.spinner}`} role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>}\r\n                    </div>\r\n                    <button\r\n                        className='btn btn-primary'\r\n                        type='submit'\r\n                    >Change\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n","import React from \"react\";\r\nimport \"./404.module.css\"\r\n\r\n\r\n\r\nconst Four = () => {\r\n\r\n\r\n    return <div className=\"Four\">\r\n        <div style={{color:\"red\",fontSize:'60px'}}>404</div>\r\n    </div>\r\n}\r\n\r\nexport default Four;","import React, {useState} from \"react\";\r\nimport styles from \"./password_recovery.module.css\"\r\nimport {Api} from \"../../API/API\";\r\nimport {emailValidate} from \"../../common/helpers/validations_rules\";\r\nimport {useForm} from \"../../common/customHooks/useForm\";\r\n\r\nexport const PasswordRecovery = () => {\r\n    let [responseMessage, setResponseMessage] = useState<string | undefined>('')\r\n    let [isDisable, setIsDisable] = useState<boolean>(false)\r\n\r\n    const submitCallback = async () => {\r\n        setIsDisable(true)\r\n        try {\r\n            let response = await Api.recoveryPassword(values.email)\r\n            setResponseMessage(response.data.info)\r\n            values.email = ''\r\n        } catch (error) {\r\n            errors.email = error.response.data.error\r\n        } finally {\r\n            setIsDisable(false)\r\n        }\r\n    }\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n    } = useForm(submitCallback, emailValidate)\r\n\r\n\r\n    return <>\r\n        <div className={styles.password_recovery}>\r\n            <p>Enter your email address<br/>to recover your password</p>\r\n            <div>\r\n                <form onSubmit={handleSubmit} noValidate>\r\n                    <div className='mb-3'>\r\n                        <input\r\n                            type='email'\r\n                            name='email'\r\n                            value={values.email || ''}\r\n                            className={`form-control ${errors.email && 'is-invalid'}`}\r\n                            placeholder='Email'\r\n                            aria-describedby='emailHelp'\r\n                            onChange={handleChange}\r\n                            disabled={isDisable}\r\n                            autoComplete='off'\r\n                        />\r\n                        {errors.email && <div className='invalid-feedback'>{errors.email}</div>}\r\n                        {responseMessage && <div className={styles.responseMessage}>{responseMessage}</div>}\r\n                        {isDisable && <div className={`spinner-border ${styles.spinner}`} role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>}\r\n                    </div>\r\n                    <button\r\n                        className='btn btn-primary'\r\n                        type='submit'\r\n                    >Send\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </>\r\n}","import {Dispatch} from \"redux\";\r\nimport {packsAPI} from \"../API/packsAPI\";\r\nimport {getTableAC} from \"./table-reducer\";\r\n\r\nlet initialState: SearchStateType = {\r\n    minCardsCount: 0,\r\n    maxCardsCount: 1\r\n}\r\n\r\nexport const packsSearchReducer = (state: SearchStateType = initialState, action: PacksActionsType) => {\r\n    switch (action.type) {\r\n        case \"SET-RANGE-FOR-PACKS-COUNT\":\r\n            return {...state, minCardsCount: action.minCardsCount, maxCardsCount: action.maxCardsCount}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setRangeForPacksAction = (minCardsCount: number, maxCardsCount: number) =>\r\n    ({type: 'SET-RANGE-FOR-PACKS-COUNT', minCardsCount, maxCardsCount}) as const\r\n\r\n// thunks\r\nexport const searchPacks = (searchRequest?: string, minCardsCount?: number, maxCardsCount?: number) =>\r\n    async (dispatch: Dispatch) => {\r\n        try {\r\n            let response = await packsAPI.getPacks({\r\n                packName: searchRequest, max: maxCardsCount, min: minCardsCount\r\n            })\r\n            dispatch(getTableAC(response.data.cardPacks))\r\n            console.log(response.data)\r\n        } finally {}\r\n    }\r\n\r\n// types\r\nexport type SearchStateType = {\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n}\r\n\r\ntype PacksActionsType = ReturnType<typeof setRangeForPacksAction>","import {Dispatch} from \"redux\"\r\nimport {packsAPI} from \"../API/packsAPI\";\r\nimport {GetPackType} from \"../API/packsAPI\"\r\nimport {setRangeForPacksAction} from \"./search-reducer\";\r\n\r\nconst getTableType = \"GET-TABLE\"\r\nconst deleteTableItemType = \"DELETE-TABLE-ITEM\"\r\nconst changeNameItem = \"CHANGE-NAME\"\r\n\r\ntype stateTypeTable = Array<GetPackType>\r\ntype actionGetTableType = {\r\n    type:\"GET-TABLE\",\r\n    tableData:Array<GetPackType>\r\n}\r\ntype actionTypeDeleteItem = {\r\n    type:\"DELETE-TABLE-TIME\"\r\n    tableDateDeleted:Array<GetPackType>\r\n    id:string\r\n}\r\ntype actionTypeChangeNameItem = {\r\n    type:\"CHANGE-NAME\"\r\n}\r\n\r\n\r\ntype actionType = actionGetTableType\r\n    | actionTypeDeleteItem\r\n    | actionTypeChangeNameItem\r\n\r\nconst initialState:Array<GetPackType> = []\r\n\r\n\r\nexport const tableReducer = (state:stateTypeTable = initialState,action:actionType) => {\r\n    switch (action.type){\r\n        case \"GET-TABLE\":\r\n            return action.tableData\r\n        case \"DELETE-TABLE-TIME\":\r\n            return action.tableDateDeleted\r\n        default:\r\n            return [...state]\r\n    }\r\n}\r\n\r\n\r\n// action creators\r\nexport const getTableAC = (tableData:Array<GetPackType>) => {\r\n    return {\r\n        type:getTableType,\r\n        tableData\r\n    }\r\n}\r\nconst deleteTableItemAC = (id:string,tableDateDeleted:Array<GetPackType>) => {\r\n    return {\r\n        type:deleteTableItemType,\r\n        tableDateDeleted,\r\n        id\r\n    }\r\n}\r\n\r\n\r\n//thunks\r\nexport const gettableDataThunk = () => {\r\n    return(dispatch:Dispatch) => {\r\n        packsAPI.getPacks({})\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                dispatch(getTableAC(res.data.cardPacks))\r\n                dispatch(setRangeForPacksAction(res.data.minCardsCount, res.data.maxCardsCount))\r\n            })\r\n    }\r\n}\r\nexport const deleteTableItemsThunk = (id:string) => {\r\n    return(dispatch:Dispatch) => {\r\n        debugger\r\n        packsAPI.deleteItemsTable(id)\r\n            .then((res) => {\r\n                dispatch(getTableAC(res.data.cardPacks))\r\n            })\r\n    }\r\n}\r\nexport const changeTableItemNameThunk = (_id:string,name:string) => {\r\n    return(dispatch:Dispatch) => {\r\n        debugger\r\n        packsAPI.changeNameItem(_id,name)\r\n            .then((res) => {\r\n                dispatch(getTableAC(res.data.cardPacks))\r\n            })\r\n    }\r\n}","import styles from \"./search.module.css\"\r\nimport React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport {getTrackBackground, Range} from 'react-range';\r\nimport {searchPacks, SearchStateType} from \"../../store/search-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\n\r\nexport const Search = () => {\r\n    const dispatch = useDispatch()\r\n    let state = useSelector<AppRootStateType, SearchStateType>(state => state.packsSearch)\r\n    let {minCardsCount, maxCardsCount} = state\r\n    let [values, setValues] = useState<Array<number>>([minCardsCount, maxCardsCount]);\r\n    let [searchRequest, setSearchRequest] = useState<string>('')\r\n\r\n    useEffect(() => {\r\n        setValues([minCardsCount, maxCardsCount])\r\n    }, [dispatch, state.minCardsCount, state.maxCardsCount])\r\n\r\n    const onSearchHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setSearchRequest(event.target.value)\r\n    }\r\n    const sendSearchRequestHandler = () => {\r\n        dispatch(searchPacks(searchRequest, values[0], values[1]))\r\n    }\r\n    return (\r\n        <>\r\n            <div className={styles.searchBlock}>\r\n                <input\r\n                    type=\"search\"\r\n                    placeholder={'Search...'}\r\n                    onChange={event => onSearchHandler(event)}\r\n                    className={`${styles.input} form-control`}/>\r\n              <div className={styles.rangeGroup}>\r\n                  <h5>Count of cards in pack</h5>\r\n                  <div className={styles.range}>\r\n                      <span>min</span>\r\n                      <Range\r\n                          values={values}\r\n                          step={1}\r\n                          min={minCardsCount}\r\n                          max={maxCardsCount}\r\n                          onChange={values => setValues(values)}\r\n                          renderTrack={({props, children}) => (\r\n                              <div\r\n                                  onMouseDown={props.onMouseDown}\r\n                                  onTouchStart={props.onTouchStart}\r\n                                  style={{\r\n                                      ...props.style,\r\n                                      height: '36px',\r\n                                      display: 'flex',\r\n                                      width: '50%',\r\n                                      margin: '30px',\r\n                                  }}\r\n                              >\r\n                                  <div\r\n                                      ref={props.ref}\r\n                                      style={{\r\n                                          height: '5px',\r\n                                          width: '100%',\r\n                                          borderRadius: '4px',\r\n                                          background: getTrackBackground({\r\n                                              values: values,\r\n                                              colors: ['#ccc', '#548BF4', '#ccc'],\r\n                                              min: minCardsCount,\r\n                                              max: maxCardsCount\r\n                                          }),\r\n                                          alignSelf: 'center'\r\n                                      }}\r\n                                  >\r\n                                      {children}\r\n                                  </div>\r\n                              </div>\r\n                          )}\r\n                          renderThumb={({index, props, isDragged}) => (\r\n                              <div\r\n                                  {...props}\r\n                                  style={{\r\n                                      ...props.style,\r\n                                      height: '12px',\r\n                                      width: '12px',\r\n                                      borderRadius: '1px',\r\n                                      backgroundColor: '#FFF',\r\n                                      display: 'flex',\r\n                                      justifyContent: 'center',\r\n                                      alignItems: 'center',\r\n                                      boxShadow: '0px 2px 6px #AAA',\r\n                                  }}\r\n                              >\r\n                                  <div\r\n                                      style={{\r\n                                          position: 'absolute',\r\n                                          top: '-28px',\r\n                                          color: '#fff',\r\n                                          fontWeight: 'bold',\r\n                                          fontSize: '14px',\r\n                                          fontFamily: 'Arial,Helvetica Neue,Helvetica,sans-serif',\r\n                                          padding: '4px',\r\n                                          borderRadius: '4px',\r\n                                          backgroundColor: '#548BF4'\r\n                                      }}\r\n                                  >\r\n                                      {values[index].toFixed(0)}\r\n                                      {/*// 10.12345 => 10; (1) => 10.1; (2) > 10.12; ...*/}\r\n                                  </div>\r\n                                  <div\r\n                                      style={{\r\n                                          height: '16px',\r\n                                          width: '5px',\r\n                                          backgroundColor: isDragged ? '#548BF4' : '#CCC'\r\n                                      }}\r\n                                  />\r\n                              </div>\r\n                          )}\r\n                      />\r\n                      <span>max</span>\r\n                  </div>\r\n              </div>\r\n                <button className={'btn btn-primary'}\r\n                        onClick={sendSearchRequestHandler}>\r\n                    Search\r\n                </button>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {changeTableItemNameThunk} from '../../store/table-reducer';\r\n\r\ntype propsType = {\r\n    _id:string\r\n    name:string\r\n}\r\n\r\nconst TableItemName = (props:propsType) => {\r\n\r\n    let [editMode,setEditMode] = useState(false)\r\n    let [name,setName] = useState(props.name)\r\n    const dispatch = useDispatch()\r\n\r\n    const onDoubleClickHandler = () => {\r\n        setEditMode(!editMode)\r\n        dispatch(changeTableItemNameThunk(props._id,name))\r\n    }\r\n\r\n\r\n    return <td>\r\n        {editMode ? <input\r\n            value={name}\r\n            onDoubleClick={ onDoubleClickHandler }\r\n            onChange={(event) => {setName(event.currentTarget.value)}}\r\n        />:<div onDoubleClick={() => {setEditMode(!editMode)}}>{name}</div>}\r\n    </td>\r\n}\r\n\r\nexport default TableItemName","import React, {useState} from \"react\";\r\nimport {deleteTableItemsThunk} from \"../../store/table-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport TableItemName from \"./tableItemName\";\r\n\r\ntype propsType = {\r\n    name:string\r\n    user_name:string | undefined\r\n    cardsCount:number\r\n    _id:string\r\n    updated:string\r\n}\r\n\r\nconst TableItem = (props:propsType) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    return  <tr key={props._id}>\r\n        <th>{props.cardsCount}</th>\r\n        <td>{props.user_name}</td>\r\n        <TableItemName name={props.name} _id={props._id}/>\r\n        <td>{props.updated}</td>\r\n        <td>\r\n            <button\r\n                type=\"button\" className=\"btn btn-outline-primary btn-sm\"\r\n                onClick={() => {dispatch(deleteTableItemsThunk(props._id))}}\r\n            >Delete</button>\r\n            <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={() => {alert(\"hello\")}}>Change</button>\r\n        </td>\r\n    </tr>\r\n}\r\n\r\n\r\nexport default TableItem;","import React, {useEffect} from \"react\";\r\nimport {GetPackType} from \"../../API/packsAPI\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {gettableDataThunk} from '../../store/table-reducer'\r\nimport {Search} from \"../search/Search\";\r\nimport TableItem from \"./TableItem\";\r\nimport Pagination from \"../pagination/pagination\";\r\nimport SortPacks from \"../SortPacks/SortPacks\";\r\n\r\nconst Table = () => {\r\n\r\n    const tableData = useSelector<AppRootStateType,Array<GetPackType>>(state => state.tableData)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(gettableDataThunk())\r\n    },[])\r\n\r\n    const massResult = tableData.map((t) => {\r\n        return <TableItem\r\n            key={t._id}\r\n            name={t.name}\r\n            user_name={t.user_name}\r\n            cardsCount={t.cardsCount}\r\n            _id={t._id}\r\n            updated={t.updated}\r\n        />\r\n    })\r\n\r\n    console.log(tableData[0])\r\n\r\n    return <>\r\n        <div>\r\n            <Search/>\r\n            <Pagination/>\r\n            <SortPacks/>\r\n            <table className=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">First</th>\r\n                    <th scope=\"col\">Last</th>\r\n                    <th scope=\"col\">Handle</th>\r\n                    <th scope=\"col\">Buttons</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {massResult}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Table\r\n\r\n{/*<tr>*/}\r\n{/*    <th scope=\"row\">1</th>*/}\r\n{/*    <td>Mark</td>*/}\r\n{/*    <td>Otto</td>*/}\r\n{/*    <td>@mdo</td>*/}\r\n{/*</tr>*/}\r\n{/*<tr>*/}\r\n{/*    <th scope=\"row\">2</th>*/}\r\n{/*    <td>Jacob</td>*/}\r\n{/*    <td>Thornton</td>*/}\r\n{/*    <td>@fat</td>*/}\r\n{/*</tr>*/}\r\n{/*<tr>*/}\r\n{/*    <th scope=\"row\">3</th>*/}\r\n{/*    <td>Larry the Bird</td>*/}\r\n{/*    <td>@twitter</td>*/}\r\n{/*</tr>*/}","import React from \"react\";\r\nimport './App.css';\r\nimport Navbar from './components/navbar/Navbar'\r\nimport {BrowserRouter,Route} from \"react-router-dom\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport LogIn from \"./components/LogIn/log_in\";\r\nimport Register from \"./components/register/register\";\r\nimport {NewPassword} from \"./components/new_password/new_password\";\r\nimport Four from \"./components/404/404\";\r\nimport {PasswordRecovery} from \"./components/password-recovery/password_recovery\";\r\nimport SortPacks from \"./components/SortPacks/SortPacks\";\r\nimport Table from \"./components/table/table\";\r\nimport {routes} from \"./components/navbar/Navbar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n        <div className=\"App\">\r\n            <Navbar/>\r\n            <div className=\"RenderPlace\">\r\n                <Route path={routes.forProfile} component={Profile}/>\r\n                <Route path={routes.forLogin} component={LogIn}/>\r\n                <Route path={routes.forRegister} component={Register}/>\r\n                <Route path={routes.foNewPassword} component={NewPassword}/>\r\n                <Route path={routes.forPasswordRecovery} component={PasswordRecovery}/>\r\n                <Route path={routes.forTable} component={Table}/>\r\n                <Route path={routes.forMistake} component={Four}/>\r\n            </div>\r\n        </div>\r\n        \r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {combineReducers, applyMiddleware,createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {userReducer} from \"./user-reducer\";\r\nimport {logInReducer} from \"./log_in-reducer\";\r\nimport {registerReducer} from \"./register-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {loginErrorReducer} from './loginError-reducer'\r\nimport {tableReducer} from \"./table-reducer\";\r\nimport {sortReducer} from \"./sort-reducer\";\r\nimport {paginationReducer} from \"./pagination-reducer\";\r\nimport {packsSearchReducer} from \"./search-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    user:userReducer,\r\n    logIn:logInReducer,\r\n    register: registerReducer,\r\n    profileDate:profileReducer,\r\n    error:loginErrorReducer,\r\n    sortPacks: sortReducer,\r\n    pagination: paginationReducer,\r\n    packsSearch: packsSearchReducer,\r\n    tableData:tableReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;","type actionType = {\r\n    type:\"Add\"\r\n}\r\n\r\n\r\nexport const userReducer = (state:string = 'Nikita',action:actionType) => {\r\n    switch (action.type){\r\n        case \"Add\":\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}